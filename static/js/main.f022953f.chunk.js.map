{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","intask","setintask","tasklist","localStorage","getItem","JSON","parse","getlocalstoredtask","item","setitem","count","setcount","countle","getlocalcounttitle","counttitle","setcounttitle","editeditem","setediteditem","togbtn","settogbtn","useEffect","document","title","additems","map","elem","id","name","newintask","alert","getElementById","focus","setItem","stringify","className","src","alt","type","value","onChange","e","target","placeholder","onClick","ind","editem","find","edititem","index","delitem","filter","deleteitem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f022953f.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport \"./Todo.css\"\r\nconst Todo = () => {\r\n    const getlocalstoredtask=()=>\r\n    {\r\n        const tasklist = localStorage.getItem(\"tasklist\");\r\n        if (tasklist) {\r\n            return JSON.parse(tasklist);            \r\n        }\r\n        else\r\n        return [];\r\n    }\r\n    const getlocalcounttitle= () =>{\r\n        const countle = localStorage.getItem(\"countle\");\r\n        if (countle>0) {\r\n            return JSON.parse(countle);    \r\n        }\r\n        return 0;\r\n    }\r\n    const [intask,setintask] = useState(\"\");\r\n    const [item,setitem] = useState(getlocalstoredtask());\r\n    const [count,setcount]=useState(0);\r\n    const [counttitle,setcounttitle]=useState(getlocalcounttitle());\r\n    const [editeditem,setediteditem]=useState(\"\");\r\n    const [togbtn,settogbtn] = useState(false);\r\n    useEffect(() => {        \r\n          document.title = `${counttitle} task left`;\r\n         });\r\n    const additems = () =>\r\n    {\r\n        if(!intask)\r\n        {\r\n            alert(\"please add a task.\");\r\n            const inp = document.getElementById('inp');\r\n            inp.focus();\r\n        }\r\n        else if(intask && togbtn)\r\n        {\r\n            setitem(\r\n                item.map((elem)=>{\r\n                    if (elem.id===editeditem) {\r\n                        return {...elem,name : intask}\r\n                    }\r\n                    else{\r\n                        return elem;\r\n                    }\r\n                })\r\n            )\r\n            setintask(\"\");\r\n            settogbtn(false);\r\n            setediteditem(\"\");\r\n        }\r\n        else\r\n        {\r\n            setcount(count+1);\r\n            const newintask={\r\n                id : count,\r\n                name : intask\r\n            }\r\n            setitem([...item,newintask]);\r\n            setintask(\"\");\r\n            setcounttitle(counttitle+1);\r\n        }\r\n    }\r\n    const edititem = (ind) =>\r\n    {\r\n        const editem = item.find((elem)=>\r\n        {\r\n            return elem.id===ind;\r\n        });\r\n        // editeditem=item.ind;\r\n        setintask(editem.name);\r\n        setediteditem(ind);\r\n        const inp = document.getElementById('inp');\r\n        inp.focus();\r\n        settogbtn(true);\r\n    }\r\n    const deleteitem = (index) =>\r\n    {\r\n        const delitem=item.filter((elem)=>\r\n        {\r\n            return elem.id !== index;\r\n        });\r\n        setitem(delitem);\r\n        setintask(\"\");\r\n        settogbtn(false);\r\n    //    counttitle = counttitle > 0 ? setcounttitle(counttitle-1) : 0;\r\n        if (counttitle > 0) {\r\n            setcounttitle(counttitle-1);\r\n        }\r\n        else{\r\n            setcounttitle(0);\r\n        }\r\n    }\r\n    const clear =()=>\r\n    {\r\n        if (counttitle===0) {\r\n            alert(\"list is empty\");\r\n        }\r\n        else\r\n        {\r\n            setitem([]);\r\n            setintask(\"\");\r\n            setcounttitle(0);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasklist\",JSON.stringify(item));\r\n    }, [item])\r\n    useEffect(() => {\r\n        localStorage.setItem(\"countle\",JSON.stringify(counttitle));\r\n    }, [counttitle])\r\n    return (\r\n        <div>  \r\n            <div className=\"heading\">\r\n                <h1>TO DOy.</h1>                 \r\n            </div>     \r\n            \r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    \r\n                    <figure>\r\n                        <img src=\"./images/note2.jpg\" alt=\"logo here\" />\r\n                        {/* <figcaption>Add a new task here ✌</figcaption> */}\r\n                    </figure>                    \r\n                    <div className=\"\">                    \r\n                        <div className=\"input-group input-group-sm mb-3\">\r\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">✍</span>\r\n                            <input type=\"text\" className=\"additems\" value={intask} onChange={(e) => setintask(e.target.value)} id=\"inp\" placeholder=\"Add new task\" />\r\n                            {\r\n                                togbtn ? <i className=\"far fa-edit editbtn\" onClick={additems}></i> : <i className=\"fa fa-plus\" onClick={additems}></i>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"showitems\">\r\n                        {item.map((elem)=>{\r\n                            return(\r\n                            <div className=\"eachitem\" key={elem.id}>\r\n                            <h3>{elem.name}</h3>\r\n                            <div className=\"todo-btn\">\r\n                                <span><i className=\"far fa-edit edits\" onClick={()=>edititem(elem.id)}></i></span>\r\n                                <span><i className=\"fas fa-trash delet\" onClick={()=>deleteitem(elem.id)}></i></span>\r\n                            </div>\r\n                        </div>\r\n                            )\r\n                        })}\r\n                        \r\n                    </div>\r\n                    <div className=\"showitems\">\r\n                        {/* <button type=\"button\" className=\"btn btn-success\">Add To List</button> */}\r\n                        <span><button type=\"button\" onClick={clear} className=\"btn btn-danger\">Clear List</button></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","// import React, { useState,useEffect } from 'react';\r\nimport './App.css';\r\nimport Todo from './Todo.js';\r\nfunction App() {  \r\n  return (\r\n    <div>\r\n      <Todo />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}